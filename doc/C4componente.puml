@startuml C4componente
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4.puml

Person(cliente, "Cliente", "Quiere hacer uso del sistema")
Person(admin, "Administrador", "Se encarga de mantener actualizado el inventario")
System_Boundary(sistema, "Sistema cliente-servidor") {
    Component(dirCliente, "Directorio clientes", "Publica el API para los clientes y redirige las peticiones a los servicios accesibles para los clientes")
    Component(dirAdmin, "Directorio administradores", "Publica el API para los administradores del sistema y redirige las peticiones a los servicios accesibles para los administradores")
    Component(añadirACesta, "Añadir elemento a la cesta", "Añade a la cesta del cliente uno de los productos disponibles en el catálogo")
    Component(borrarDeCesta, "Eliminar elemento de la cesta", "Borra un producto de la cesta del cliente")
    Component(cesta, "Ver cesta", "Muestra los productos de la cesta del cliente")
    Component(comprar, "Comprar cesta", "Proceso de pago de los productos de la cesta del cliente")
    Component(cancelar, "Cancelar cesta", "Elimina todos los productos de la cesta del cliente")
    Component(catalogo, "Ver catálogo", "Muestra todos los productos disponibles en la tienda")
    Component(añadirACatálogo, "Añadir elemento al catálogo", "Añade un nuevo producto al catálogo")
    Component(borrarDeCatálogo, "Eliminar elemento del catálogo", "Elimina uno de los productos del catálogo")
    Component(editarElemento, "Editar elemento", "Cambia nombre, precio o cantidad disponible de uno de los productos del catálogo")
    ContainerDb(db, "Base de datos de productos", "Almacena los productos disponibles del catálogo")
    ContainerDb(ces, "Cesta clientes", "Almacena los productos seleccionados por cada cliente")
}

Rel(cliente, dirCliente, "Envía", "petición")
Rel(dirCliente, cliente, "Devuelve", "respuesta")
Rel(admin, dirAdmin, "Envía", "petición")
Rel(dirAdmin, admin, "Devuelve", "respuesta")

Rel(dirCliente, añadirACesta, "Redirige", "petición")
Rel(añadirACesta, dirCliente, "Responde", "resultado")
Rel(dirCliente, borrarDeCesta, "Redirige", "petición")
Rel(borrarDeCesta, dirCliente, "Responde", "resultado")
Rel(dirCliente, cesta, "Redirige", "petición")
Rel(cesta, dirCliente, "Responde", "resultado")
Rel(dirCliente, comprar, "Redirige", "petición")
Rel(comprar, dirCliente, "Responde", "resultado")
Rel(dirCliente, cancelar, "Redirige", "petición")
Rel(cancelar, dirCliente, "Responde", "resultado")
Rel(dirCliente, catalogo, "Redirige", "petición")
Rel(catalogo, dirCliente, "Responde", "resultado")

Rel(dirAdmin, catalogo, "Redirige", "petición")
Rel(catalogo, dirAdmin, "Responde", "resultado")
Rel(dirAdmin, añadirACatálogo, "Redirige", "petición")
Rel(añadirACatálogo, dirAdmin, "Responde", "resultado")
Rel(dirAdmin, borrarDeCatálogo, "Redirige", "petición")
Rel(borrarDeCatálogo, dirAdmin, "Responde", "resultado")
Rel(dirAdmin, editarElemento, "Redirige", "petición")
Rel(editarElemento, dirAdmin, "Responde", "resultado")

Rel(añadirACesta, ces, "Envía", "consulta")
Rel(ces, añadirACesta, "Devuelve", "resultado")
Rel(borrarDeCesta, ces, "Envía", "consulta")
Rel(ces, borrarDeCesta, "Devuelve", "resultado")
Rel(cesta, ces, "Envía", "consulta")
Rel(ces, cesta, "Devuelve", "resultado")
Rel(comprar, ces, "Envía", "consulta")
Rel(ces, comprar, "Devuelve", "resultado")
Rel(cancelar, ces, "Envía", "consulta")
Rel(ces, cancelar, "Devuelve", "resultado")
Rel(comprar, db, "Envía", "consulta")
Rel(db, comprar, "Devuelve", "resultado")
Rel(añadirACesta, db, "Envía", "consulta")
Rel(db, añadirACesta, "Devuelve", "resultado")

Rel(catalogo, db, "Envía", "consulta")
Rel(db, catalogo, "Devuelve", "resultado")
Rel(añadirACatálogo, db, "Envía", "consulta")
Rel(db, añadirACatálogo, "Devuelve", "resultado")
Rel(borrarDeCatálogo, db, "Envía", "consulta")
Rel(db, borrarDeCatálogo, "Devuelve", "resultado")
Rel(editarElemento, db, "Envía", "consulta")
Rel(db, editarElemento, "Devuelve", "resultado")
@enduml